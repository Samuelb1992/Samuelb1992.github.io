grepl("astillero",Cliente_Nombre,ignore.case = TRUE) ~ "Astillero del Mar",
grepl("Dest",Cliente_Nombre,ignore.case = TRUE) ~ "Destilería Patricio",
grepl("Higo",Cliente_Nombre,ignore.case = TRUE) ~ "Ferretería el Higo",
grepl("Jaime",Cliente_Nombre,ignore.case = TRUE) ~ "Maderas Jaime",
grepl("Nevada",Cliente_Nombre,ignore.case = TRUE) ~ "Nevada Ltda",
grepl("Nuevo",Cliente_Nombre,ignore.case = TRUE) ~ "Nuevo Imperio SA",
grepl("la Maga",Cliente_Nombre,ignore.case = TRUE) ~ "Restaurant La Maga",
TRUE ~ Cliente_Nombre)) |>
mutate(Nombre_Estandarizado_Vendedor = case_when(grepl("Astrid",Vendedor) ~ "Astrid Reinoso",
grepl("Eva",Vendedor) ~ "Eva Luna",
grepl("Lizard",Vendedor) ~ "Lizardo Acuña",
grepl("Patricio",Vendedor) ~ "Patricio Lorca",
grepl("Pedro",Vendedor) ~ "Pedro Ruiz",
grepl("Renato",Vendedor) ~ "Renato Weinberg",
TRUE ~ Vendedor))
df.excel.v2 <- df.excel.v1 |>
group_by(Nombre_Estandarizado_Vendedor, Nombre_Estandarizado) |>
summarise(Total_Monto = sum(Monto))
df.excel.v2
df.excel.v2 |> View()
df.excel.v1 <- df.excel |>
mutate(Nombre_Estandarizado = case_when((grepl("Agr",Cliente_Nombre,ignore.case = TRUE)) | (Cliente_Nombre=="Acgricola SUR")  ~ "Agrícola SUR",
grepl("el sol",Cliente_Nombre,ignore.case = TRUE) ~ "Almacén el Sol",
grepl("mayor",Cliente_Nombre,ignore.case = TRUE) ~ "Arsenal Mayor",
grepl("astillero",Cliente_Nombre,ignore.case = TRUE) ~ "Astillero del Mar",
grepl("Dest",Cliente_Nombre,ignore.case = TRUE) ~ "Destilería Patricio",
grepl("Higo",Cliente_Nombre,ignore.case = TRUE) ~ "Ferretería el Higo",
grepl("Jaime",Cliente_Nombre,ignore.case = TRUE) ~ "Maderas Jaime",
grepl("Nevada",Cliente_Nombre,ignore.case = TRUE) ~ "Nevada Ltda",
grepl("Nuevo",Cliente_Nombre,ignore.case = TRUE) ~ "Nuevo Imperio SA",
grepl("la Maga",Cliente_Nombre,ignore.case = TRUE) ~ "Restaurant La Maga",
TRUE ~ Cliente_Nombre)) |>
mutate(Nombre_Estandarizado_Vendedor = case_when(grepl("Astrid",Vendedor) ~ "Astrid Reinoso",
grepl("Eva",Vendedor) ~ "Eva Luna",
grepl("Lizard",Vendedor) ~ "Lizardo Acuña",
grepl("Patricio",Vendedor) ~ "Patricio Lorca",
grepl("Pedro",Vendedor) ~ "Pedro Ruiz",
grepl("Renato",Vendedor) ~ "Renato Weinberg",
TRUE ~ Vendedor))
df.excel.v2 <- df.excel.v1 |>
group_by(Nombre_Estandarizado_Vendedor, Nombre_Estandarizado) |>
summarise(Total_Monto = sum(Monto))
df.excel.v2
df.excel.v1 <- df.excel |>
mutate(Nombre_Estandarizado = case_when((grepl("Agr",Cliente_Nombre,ignore.case = TRUE)) | (Cliente_Nombre=="Acgricola SUR ltda")  ~ "Agrícola SUR",
grepl("el sol",Cliente_Nombre,ignore.case = TRUE) ~ "Almacén el Sol",
grepl("mayor",Cliente_Nombre,ignore.case = TRUE) ~ "Arsenal Mayor",
grepl("astillero",Cliente_Nombre,ignore.case = TRUE) ~ "Astillero del Mar",
grepl("Dest",Cliente_Nombre,ignore.case = TRUE) ~ "Destilería Patricio",
grepl("Higo",Cliente_Nombre,ignore.case = TRUE) ~ "Ferretería el Higo",
grepl("Jaime",Cliente_Nombre,ignore.case = TRUE) ~ "Maderas Jaime",
grepl("Nevada",Cliente_Nombre,ignore.case = TRUE) ~ "Nevada Ltda",
grepl("Nuevo",Cliente_Nombre,ignore.case = TRUE) ~ "Nuevo Imperio SA",
grepl("la Maga",Cliente_Nombre,ignore.case = TRUE) ~ "Restaurant La Maga",
TRUE ~ Cliente_Nombre)) |>
mutate(Nombre_Estandarizado_Vendedor = case_when(grepl("Astrid",Vendedor) ~ "Astrid Reinoso",
grepl("Eva",Vendedor) ~ "Eva Luna",
grepl("Lizard",Vendedor) ~ "Lizardo Acuña",
grepl("Patricio",Vendedor) ~ "Patricio Lorca",
grepl("Pedro",Vendedor) ~ "Pedro Ruiz",
grepl("Renato",Vendedor) ~ "Renato Weinberg",
TRUE ~ Vendedor))
df.excel.v2 <- df.excel.v1 |>
group_by(Nombre_Estandarizado_Vendedor, Nombre_Estandarizado) |>
summarise(Total_Monto = sum(Monto))
df.excel.v2
df.excel.v2 |> View()
df.excel.v3 <- df.excel.v2 |>
mutate(Comisiones = case_when(Total_Monto <= 100000 ~ Total_Monto * 0.05,
Total_Monto > 100000 & Total_Monto <= 200000 ~ Total_Monto * 0.1,
Total_Monto > 200000 ~ Total_Monto * 0.15))
df.excel.v3
df.excel.v3 |> View()
df.excel.v3 |> group_by(Nombre_Estandarizado_Vendedor) |> summarise(Total_Comisiones = sum(Comisiones))
df.excel.v3 |> group_by(Nombre_Estandarizado_Vendedor) |> summarise(Total_Comisiones = sum(Comisiones)) |> arrange()
df.excel.v3 |> group_by(Nombre_Estandarizado_Vendedor) |> summarise(Total_Comisiones = sum(Comisiones)) |> arrange(Total_Comisiones)
df.excel.v3 |> group_by(Nombre_Estandarizado_Vendedor) |> summarise(Total_Comisiones = sum(Comisiones)) |> arrange(desc(Total_Comisiones))
df.excel.v3
df.excel.v3 |> group_by(Nombre_Estandarizado) |> summarise(Total_Monto_Cliente = sum(Total_Monto))
df.excel.v3 |> group_by(Nombre_Estandarizado) |> summarise(Total_Monto_Cliente = sum(Total_Monto)) |> arrange(desc(Total_Monto_Cliente))
df.excel.v1
df.excel.v1 |>
group_by(Material) |>
summarise(Total_Cantidad = sum(Cantidad))
df.excel.v1 |>
group_by(Material) |>
summarise(Total_Cantidad = sum(Cantidad)) |>
arrange(desc(Total_Cantidad))
?read_excel
df.clases <- read_excel("/Users/samuelbeltranlastra/Downloads/Datos_Prueba.xlsx",sheet = "Datos_P3_Clases")
df.clases <- read_excel("/Users/samuelbeltranlastra/Downloads/Datos_Prueba.xlsx",sheet = "Datos_P3_Saldos")
df.clases <- read_excel("/Users/samuelbeltranlastra/Downloads/Datos_Prueba.xlsx",sheet = "Datos_P3_Clases")
df.saldos <- read_excel("/Users/samuelbeltranlastra/Downloads/Datos_Prueba.xlsx",sheet = "Datos_P3_Saldos")
df.clases |> View()
df.saldos |> View()
df.clases.pivot <- pivot_longer(df.clases, names_to = "caja")
df.clases.pivot <- pivot_longer(df.clases, names_to = "Caja", values_to = "Tipo_Cliente")
df.clases
rownames(df.clases)
df.clases.pivot <- pivot_longer(rownames(df.clases), names_to = "Caja", values_to = "Tipo_Cliente")
row_number(df.clases)
df.clases$Posicion <- row_number(df.clases)
df.clases.pivot <- pivot_longer(df.clases$Posicion, names_to = "Caja", values_to = "Tipo_Cliente")
df.clases <- read_excel("/Users/samuelbeltranlastra/Downloads/Datos_Prueba.xlsx",sheet = "Datos_P3_Clases")
df.clases$Posicion <- row_number(df.clases)
df.clases
df.clases |> View()
df.clases.pivot <- pivot_longer(everything(), names_to = "Caja", values_to = "Tipo_Cliente")
df.clases |>
pivot_longer(cols = everything(), names_to = "Caja", values_to = "Tipo_Cliente")
df.clases.pivot <- df.clases |>
pivot_longer(cols = everything(), names_to = "Caja", values_to = "Tipo_Cliente")
df.clases.pivot |> View()
df.clases <- read_excel("/Users/samuelbeltranlastra/Downloads/Datos_Prueba.xlsx",sheet = "Datos_P3_Clases")
df.saldos <- read_excel("/Users/samuelbeltranlastra/Downloads/Datos_Prueba.xlsx",sheet = "Datos_P3_Saldos")
df.clases.pivot <- df.clases |>
pivot_longer(cols = everything(), names_to = "Caja", values_to = "Tipo_Cliente")
df.clases.pivot |> View()
df.saldos.pivot <- df.saldos |>
pivot_longer(cols = everything(), names_to = "Caja", values_to = "Saldos")
df.saldos.pivot |> View()
cbind(df.clases.pivot, df.saldos.pivot)
# Union
df.total <- cbind(df.clases.pivot, df.saldos.pivot)
df.total |>
group_by(Tipo_Cliente) |>
summarise(Media = mean(Saldos),
dest = sd(Saldos))
df.total
# Pivot
df.saldos.pivot <- df.saldos |>
pivot_longer(cols = everything(), names_to = "Caja_saldo", values_to = "Saldos")
# Pivot
df.clases.pivot <- df.clases |>
pivot_longer(cols = everything(), names_to = "Caja_clase", values_to = "Tipo_Cliente")
df.total |>
group_by(Tipo_Cliente) |>
summarise(Media = mean(Saldos),
dest = sd(Saldos))
# Union
df.total <- cbind(df.clases.pivot, df.saldos.pivot)
df.total |>
group_by(Tipo_Cliente) |>
summarise(Media = mean(Saldos),
dest = sd(Saldos))
df.propios <- read_excel("/Users/samuelbeltranlastra/Downloads/Datos_Prueba.xlsx",sheet = "Datos_P2_Propios")
df.competencia <- read_excel("/Users/samuelbeltranlastra/Downloads/Datos_Prueba.xlsx",sheet = "Datos_P3_Competencia")
df.competencia <- read_excel("/Users/samuelbeltranlastra/Downloads/Datos_Prueba.xlsx",sheet = "Datos_P2_Competencia")
df.propios <- read_excel("/Users/samuelbeltranlastra/Downloads/Datos_Prueba.xlsx",sheet = "Datos_P2_Propios")
df.competencia <- read_excel("/Users/samuelbeltranlastra/Downloads/Datos_Prueba.xlsx",sheet = "Datos_P2_Competencia")
df.propios
df.propios
df.competencia
df.propios |>
mutate(Precio_Promedio = Precio / Cantidad)
df.propios.v1 <- df.propios |>
mutate(Precio_Promedio = Precio / Cantidad)
df.competencia
df.competencia |>
mutate(Precio_Promedio = Precio / Cantidad)
# Competencia
df.competencia.v1 <- df.competencia |>
mutate(Precio_Promedio = Precio / Cantidad)
# Calcular precio por unidad
df.propios.v1 <- df.propios |>
mutate(Precio_Unidad = Precio / Cantidad)
# Competencia
df.competencia.v1 <- df.competencia |>
mutate(Precio_Unidad = Precio / Cantidad)
df.competencia.v1
df.competencia |>
group_by(Mes) |>
summarise(Cantidad_Promedio = mean(Cantidad),
Precio_Promedio = mean(Precio))
dim(df.propios)
dim(df.competencia.v1)
df.competencia |>
group_by(Mes) |>
summarise(Cantidad_Promedio = mean(Cantidad),
Precio_Promedio = mean(Precio))
df.competencia.v1 <- df.competencia |>
group_by(Mes) |>
summarise(Cantidad_Promedio = mean(Cantidad),
Precio_Promedio = mean(Precio))
dim(df.competencia.v1)
left_join(df.propios , df.competencia.v1, by = "Mes")
df.total.p2 <-  left_join(df.propios , df.competencia.v1, by = "Mes")
df.total.p2 <- left_join(df.propios , df.competencia.v1, by = "Mes")
df.total.p3 <- df.total.p2 |>
mutate(Propias = Cantidad * Precio,
Competencia = Cantidad_Promedio * Precio_Promedio)
df.total.p3
df.total.p3 <- df.total.p2 |>
mutate(Propias = Cantidad * Precio,
Competencia = Cantidad_Promedio * Precio_Promedio) |>
mutate(Diferencia = Competencia-Propias)
df.total.p3
df.total.p3 |> View()
df.total.p3 |> select(Diferencia)
df.total.p3 |> select(Mes,Diferencia) |> View()
library(clipr)
df.total.p3 |> select(Mes,Diferencia) |> write_clip()
df.total.p3 |> select(Mes,Cantidad_Promedio,Precio_Promedio) |> write_clip()
df.total.p3 |> select(Mes,round(Cantidad_Promedio),round(Precio_Promedio)) |> write_clip()
df.total.p3 |> select(Mes,round(Cantidad_Promedio),round(Precio_Promedio)) |> write_clip()
df.competencia.v1 <- df.competencia |>
group_by(Mes) |>
summarise(Cantidad_Promedio = round(mean(Cantidad)),
Precio_Promedio = round(mean(Precio)))
df.total.p2 <- left_join(df.propios , df.competencia.v1, by = "Mes")
df.total.p3 <- df.total.p2 |>
mutate(Propias = Cantidad * Precio,
Competencia = Cantidad_Promedio * Precio_Promedio) |>
mutate(Diferencia = Competencia-Propias)
df.total.p3 |> select(Mes,Cantidad_Promedio,Precio_Promedio) |> write_clip()
#| warning: false
#| echo: false
# install.packages("worldfootballR")
library(knitr)
library(worldfootballR)
library(tidyverse)
library(gt)
library(gtExtras)
library(httr2)
library(jsonlite)
library(httr)
#----- can use for a single player: -----#
df.fbref <- fb_player_season_stats("https://fbref.com/en/players/dc224436/Erick-Wiemberg")
#----- can use for a single player: -----#
df.fbref <- fb_player_season_stats("https://fbref.com/en/players/dc224436/Erick-Wiemberg", stat_type = "standard")
glimpse(df.fbref)
?fb_player_season_stats
df.fbref |> View()
# Jugadores Liga Chilena
df.chile.fbref <- fb_player_season_stats("https://fbref.com/en/players/dc224436/Erick-Wiemberg",
stat_type = "shooting"
)
df.chile.fbref |> View()
# Jugadores Liga Chilena (xG no disponible)
df.chile.fbref <- fb_player_season_stats("https://fbref.com/en/players/dc224436/Erick-Wiemberg",
stat_type = "passing"
)
df.chile.fbref |> View()
# Jugadores Liga Chilena (xG no disponible, Pases tampoco tenemos disponibles)
df.chile.fbref <- fb_player_season_stats("https://fbref.com/en/players/dc224436/Erick-Wiemberg",
stat_type = "passing_types"
)
df.chile.fbref |> View()
# Jugadores Liga Chilena (xG no disponible, Pases tampoco tenemos disponibles)
df.chile.fbref <- fb_player_season_stats("https://fbref.com/en/players/dc224436/Erick-Wiemberg",
stat_type = "gca"
)
df.chile.fbref |> View()
# Jugadores Liga Chilena (xG no disponible, Pases tampoco tenemos disponibles, GCA no, )
df.chile.fbref <- fb_player_season_stats("https://fbref.com/en/players/dc224436/Erick-Wiemberg",
stat_type = "defense"
)
df.chile.fbref |> View()
# Jugadores Liga Chilena (xG no disponible, Pases tampoco tenemos disponibles, GCA no, Defensa algunos datos, )
df.chile.fbref <- fb_player_season_stats("https://fbref.com/en/players/dc224436/Erick-Wiemberg",
stat_type = "possession"
)
df.chile.fbref |> View()
?fb_player_scouting_report
messi_primary <- fb_player_scouting_report(player_url = "https://fbref.com/en/players/d70ce98e/Lionel-Messi", pos_versus = "primary")
dplyr::glimpse(messi_primary)
messi_primary |> View()
install.packages("nanoparquet")
#| warning: false
#| echo: false
# install.packages("worldfootballR")
library(knitr)
library(worldfootballR)
library(tidyverse)
library(gt)
library(gtExtras)
library(httr2)
library(jsonlite)
library(httr)
library(nanoparquet)
df.libertadores.url <- fb_match_urls(country = "", gender = "M", season_end_year = 2024, tier = "", non_dom_league_url = "https://fbref.com/en/comps/14/history/Copa-Libertadores-Seasons")
# df.libertadores.url <- fb_match_urls(country = "", gender = "M", season_end_year = 2024, tier = "", non_dom_league_url = "https://fbref.com/en/comps/14/history/Copa-Libertadores-Seasons")
wc_2018_urls <- fb_match_urls(country = "", gender = "M", season_end_year = 2018, tier = "", non_dom_league_url = "https://fbref.com/en/comps/1/history/World-Cup-Seasons")
friendly_int_2021_urls <- fb_match_urls(country = "", gender = "M", season_end_year = 2021, tier = "", non_dom_league_url = "https://fbref.com/en/comps/218/history/Friendlies-M-Seasons")
euro_2021_urls <- fb_match_urls(country = "", gender = "M", season_end_year = 2021, tier = "", non_dom_league_url = "https://fbref.com/en/comps/676/history/European-Championship-Seasons")
copa_2019_urls <- fb_match_urls(country = "", gender = "M", season_end_year = 2019, tier = "", non_dom_league_url = "https://fbref.com/en/comps/685/history/Copa-America-Seasons")
df.libertadores.url <- fb_match_urls(country = "", gender = "M", season_end_year = 2024, tier = "", non_dom_league_url = "https://fbref.com/en/comps/14/history/Copa-Libertadores-Seasons")
df.libertadores.url
df.lib.matches.player <- fb_advanced_match_stats(match_url = df.libertadores.url, stat_type = "standard", team_or_player = "player")
df.sum.player.match <- fb_advanced_match_stats(match_url = df.libertadores.url, stat_type = "summary", team_or_player = "player")
dim(df.sum.player.match)
df.sum.player.match |> View()
write_parquet(df.sum.player.match, "player_data_libertadores2024.parquet")
write_csv(df.sum.player.match, "player_data_libertadores2024.csv")
df.passing.player.match <- fb_advanced_match_stats(match_url = df.libertadores.url, stat_type = "passing", team_or_player = "player")
?load_fb_advanced_match_stats
df.sum.player.match
?fb_advanced_match_stats
df.sum.player.match |> glimpse()
?fb_advanced_match_stats
df.passing.player.match <- fb_advanced_match_stats(match_url = df.libertadores.url, stat_type = "passing", team_or_player = "player", time_pause = 20)
glimpse(df.passing.player.match)
intersect(colnames(df.sum.player.match, df.passing.player.match))
intersect(colnames(df.sum.player.match), colnames(df.passing.player.match)))
intersect(colnames(df.sum.player.match), colnames(df.passing.player.match)))
intersect(colnames(df.sum.player.match), colnames(df.passing.player.match))
?intersect
setdiff(colnames(df.sum.player.match), colnames(df.passing.player.match))
colnames(df.sum.player.match)
write_parquet(df.passing.player.match, "player_data_libertadores2024_passing.parquet")
df.passing.types.player.match <- fb_advanced_match_stats(match_url = df.libertadores.url, stat_type = "passing_types", team_or_player = "player", time_pause = 10)
write_parquet(df.passing.types.player.match, "player_data_libertadores2024_passing_type.parquet")
colnames(df.passing.types.player.match)
df.defense.player.match <- fb_advanced_match_stats(match_url = df.libertadores.url, stat_type = "defense", team_or_player = "player", time_pause = 10)
glimpse(df.defense.player.match)
write_parquet(df.defense.player.match, "player_data_libertadores2024_defense.parquet")
df.possesion.player.match <- fb_advanced_match_stats(match_url = df.libertadores.url, stat_type = "possession", team_or_player = "player", time_pause = 10)
write_parquet(df.possesion.player.match, "player_data_libertadores2024_possession.parquet")
df.keeper.player.match <- fb_advanced_match_stats(match_url = df.libertadores.url, stat_type = "keeper", team_or_player = "player", time_pause = 10)
write_parquet(df.keeper.player.match, "player_data_libertadores2024_keeper.parquet")
df.misc.player.match <- fb_advanced_match_stats(match_url = df.libertadores.url, stat_type = "misc", team_or_player = "player", time_pause = 5)
df.misc.player.match |> glimpse()
write_parquet(df.misc.player.match, "player_data_libertadores2024_misc.parquet")
df.summary <- read_parquet("player.¡_summary.parquet")
df.summary <- read_parquet("player_summary.parquet")
View(df.summary)
df.passing <- read_parquet("player_passing.parquet")
df.passing.type <- read_parquet("player_passing_type.parquet")
df.possession <- read_parquet("player_possession.parquet")
df.defense <- read_parquet("player_defense.parquet")
df.keeper <- read_parquet("player_keeper.parquet")
df.misc <- read_parquet("player_misc.parquet")
df.summary <- read_parquet("player_summary.parquet")
df.passing <- read_parquet("player_passing.parquet")
df.passing.type <- read_parquet("player_passing_type.parquet")
df.possession <- read_parquet("player_possession.parquet")
df.defense <- read_parquet("player_defense.parquet")
df.keeper <- read_parquet("player_keeper.parquet")
df.misc <- read_parquet("player_misc.parquet")
dim(df.summary)
dim(df.passing)
dim(df.passing.type)
dim(df.possession)
dim(df.defense)
dim(df.defense)
dim(df.keeper)
dim(df.misc)
colnames(df.summary)
library(clipr)
colnames(df.summary) |> write_clip()
glimpse(df.summary)
summary(df.summary)
library(clickR)
clickR::descriptive(df.summary)
glimpse(df.summary)
unique(df.summary$Matchweek)
glimpse(df.summary)
glimpse(df.passing)
colnames(df.passing) |> write_clip()
colnames(df.passing.type) |> write_clip()
df.passing.type |> write_clip()
glimpse(df.passing.type)
load('/Users/samuelbeltranlastra/Downloads/software_adafeet/multivariate/male.Rdata')
install.packages("archetypes")
X
dim(X)
colnames(df.possession)
colnames(df.possession) |> write_clip()
glimpse(df.possession)
colnames(df.possession) |> write_clip()
colnames(df.defense)
colnames(df.defense) |> write_clip()
glimpse(df.defense)
#----- for a single player: -----#
hazard_bio <- tm_player_bio(player_url = "https://www.transfermarkt.com/eden-hazard/profil/spieler/50202")
dplyr::glimpse(hazard_bio)
#----- for multiple players: -----#
# # can make use of a tm helper function:
# burnley_player_urls <- tm_team_player_urls(team_url = "https://www.transfermarkt.com/fc-burnley/startseite/verein/1132/saison_id/2020")
# # then pass all those URLs to the tm_player_bio
# burnley_bios <- tm_player_bio(player_urls = burnley_player_urls)
#----- for a single player: -----#
bio_test <- tm_player_bio(player_url = "https://www.transfermarkt.es/lucas-cepeda/profil/spieler/912392")
dplyr::glimpse(bio_test)
#----- for multiple players: -----#
# # can make use of a tm helper function:
# burnley_player_urls <- tm_team_player_urls(team_url = "https://www.transfermarkt.com/fc-burnley/startseite/verein/1132/saison_id/2020")
# # then pass all those URLs to the tm_player_bio
# burnley_bios <- tm_player_bio(player_urls = burnley_player_urls)
# install.packages("devtools")
devtools::install_github("JaseZiv/worldfootballR")
#| warning: false
#| echo: false
# install.packages("worldfootballR")
library(knitr)
library(worldfootballR)
library(tidyverse)
library(gt)
library(gtExtras)
library(httr2)
library(jsonlite)
library(httr)
library(nanoparquet)
library(clipr)
library()
#| warning: false
#| echo: false
# install.packages("worldfootballR")
library(knitr)
library(worldfootballR)
library(tidyverse)
library(gt)
library(gtExtras)
library(httr2)
library(jsonlite)
library(httr)
library(nanoparquet)
library(clipr)
library()
#| warning: false
#| echo: false
# install.packages("worldfootballR")
library(knitr)
library(worldfootballR)
library(tidyverse)
library(gt)
library(gtExtras)
library(httr2)
library(jsonlite)
library(httr)
library(nanoparquet)
library(clipr)
#----- for a single player: -----#
bio_test <- tm_player_bio(player_url = "https://www.transfermarkt.es/lucas-cepeda/profil/spieler/912392")
dplyr::glimpse(bio_test)
#----- for multiple players: -----#
# # can make use of a tm helper function:
# burnley_player_urls <- tm_team_player_urls(team_url = "https://www.transfermarkt.com/fc-burnley/startseite/verein/1132/saison_id/2020")
# # then pass all those URLs to the tm_player_bio
# burnley_bios <- tm_player_bio(player_urls = burnley_player_urls)
# Jugadores Liga Chilena (xG no disponible, Pases tampoco tenemos disponibles, GCA no, Defensa algunos datos, possesion tampoco, )
df.chile.fbref <- fb_player_season_stats("https://fbref.com/en/players/dc224436/Erick-Wiemberg",
stat_type = "misc"
)
#----- for a single player: -----#
bio_test <- tm_player_bio(player_url = "https://www.transfermarkt.es/lucas-cepeda/profil/spieler/912392")
dplyr::glimpse(bio_test)
#----- for multiple players: -----#
# # can make use of a tm helper function:
# burnley_player_urls <- tm_team_player_urls(team_url = "https://www.transfermarkt.com/fc-burnley/startseite/verein/1132/saison_id/2020")
# # then pass all those URLs to the tm_player_bio
# burnley_bios <- tm_player_bio(player_urls = burnley_player_urls)
#----- for a single player: -----#
bio_test <- tm_player_bio(player_url = "https://www.transfermarkt.es/lionel-messi/profil/spieler/28003")
dplyr::glimpse(bio_test)
#----- for multiple players: -----#
# # can make use of a tm helper function:
# burnley_player_urls <- tm_team_player_urls(team_url = "https://www.transfermarkt.com/fc-burnley/startseite/verein/1132/saison_id/2020")
# # then pass all those URLs to the tm_player_bio
# burnley_bios <- tm_player_bio(player_urls = burnley_player_urls)
sessionInfo()
#| warning: false
#| echo: false
# install.packages("worldfootballR")
library(knitr)
library(worldfootballR)
library(tidyverse)
library(gt)
library(gtExtras)
library(httr2)
library(jsonlite)
library(httr)
library(nanoparquet)
library(clipr)
df.summary <- read_parquet("player_summary.parquet")
df.passing <- read_parquet("player_passing.parquet")
df.passing.type <- read_parquet("player_passing_type.parquet")
df.possession <- read_parquet("player_possession.parquet")
df.defense <- read_parquet("player_defense.parquet")
df.keeper <- read_parquet("player_keeper.parquet") # Dimension distinta
df.misc <- read_parquet("player_misc.parquet")
#----- for a single player: -----#
bio_test <- tm_player_bio(player_url = "https://www.transfermarkt.es/lionel-messi/profil/spieler/28003")
dplyr::glimpse(bio_test)
#----- for multiple players: -----#
# # can make use of a tm helper function:
# burnley_player_urls <- tm_team_player_urls(team_url = "https://www.transfermarkt.com/fc-burnley/startseite/verein/1132/saison_id/2020")
# # then pass all those URLs to the tm_player_bio
# burnley_bios <- tm_player_bio(player_urls = burnley_player_urls)
glimpse(df.defense)
glimpse(df.keeper)
glimpse(df.misc)
df.keeper |> colnames() |> write_clip()
df.keeper |> glimpse()
df.misc |> colnames() |> write_clip()
df.misc |> glimpse()
df.keeper |> glimpse()
df.summary$Home_Team
unique(df.summary$Home_Team)
c(unique(df.summary$Home_Team),unique(df.summary$Away_Team))
unique(c(unique(df.summary$Home_Team),unique(df.summary$Away_Team)))
length(unique(c(unique(df.summary$Home_Team),unique(df.summary$Away_Team))))
df.summary |> group_by(Player, Team) |> summarise(XG = sum(xG_Expected))
df.summary |> group_by(Player, Team) |> summarise(XG = sum(xG_Expected)) |> arrange(desc(XG))
df.summary |> filter(Player == "Carlos Palacios")
df.summary |> filter(Player == "Carlos Palacios") |> select(Match_Date,Home_Team,Away_Team,xG_Expected)
df.summary |> filter(Player == "Carlos Palacios") |> select(Match_Date,Home_Team,Away_Team,xG_Expected) |> pull(xG_Expected)
df.summary |> filter(Player == "Carlos Palacios") |> select(Match_Date,Home_Team,Away_Team,xG_Expected) |> pull(xG_Expected) |> sum()
df.summary |> filter(Player == "Carlos Palacios") |> select(Match_Date,Home_Team,Away_Team,xG_Expected) |> arrange(Match_Date)
df.summary |> filter(Player == "Carlos Palacios") |> select(Match_Date,Home_Team,Away_Team,xG_Expected) |> arrange(desc(Match_Date))
--quarto
quarto --version
