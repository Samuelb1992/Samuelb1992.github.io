# Fuente
tab_source_note(
source_note = "Fuente Datos: FBref"
) %>%
return(table.jpg)
}
#| echo: false
#| warning: false
player.goals.xg.v4 |>
gt() |>
tab_header("Goleadores Premier League - Jornada 7") |>
text_transform(
locations = cells_body(columns = Url),
fn = function(x) {
web_image(url = x, height = 40)
}) |>
text_transform(
locations = cells_body(columns = ruta_local),
fn = function(x) {
local_image(filename = x,height = 40
)
}
)
#| echo: false
#| warning: false
player.goals.xg.v4 |>
gt() |>
tab_header("Goleadores Premier League - Jornada 7") |>
text_transform(
locations = cells_body(columns = Url),
fn = function(x) {
web_image(url = x, height = 40)
}) |>
text_transform(
locations = cells_body(columns = ruta_local),
fn = function(x) {
local_image(filename = x,height = 40
)
}
)
player.goals.xg.v4
# Columnas finales seleccionadas
player.goals.xg.v4 <- player.goals.xg.v3 |>
select(player_name, Url, Goals_Total)
#| echo: false
#| warning: false
player.goals.xg.v4 |>
gt() |>
tab_header("Goleadores Premier League - Jornada 7") |>
text_transform(
locations = cells_body(columns = Url),
fn = function(x) {
web_image(url = x, height = 40)
})
#| echo: false
#| warning: false
player.goals.xg.v4 |>
gt() |>
text_transform(
locations = cells_body(columns = Url),
fn = function(x) {
web_image(url = x, height = 40)
})
player.goals.xg.v4 |>
gt()
# Columnas finales seleccionadas
player.goals.xg.v4 <- player.goals.xg.v3 |>
select(player, Url, Goals_Total)
player.goals.xg.v4 |>
gt()
#| echo: false
#| warning: false
player.goals.xg.v4 |>
gt() |>
text_transform(
locations = cells_body(columns = Url),
fn = function(x) {
web_image(url = x, height = 40)
})
player.goals.xg.v4
# Columnas finales seleccionadas
player.goals.xg.v4 <- player.goals.xg.v3 |>
select(player, Url, Goals_Total) |>
ungroup()
# Columnas finales seleccionadas
player.goals.xg.v4 <- player.goals.xg.v3 |>
select(player, Url, team_name,Goals_Total) |>
ungroup()
player.goals.xg.v4
#| echo: false
#| warning: false
player.goals.xg.v4 |>
gt() |>
text_transform(
locations = cells_body(columns = Url),
fn = function(x) {
web_image(url = x, height = 40)
})
#| echo: false
#| warning: false
player.goals.xg.v4 |>
gt() |>
slice(10) |>
text_transform(
locations = cells_body(columns = Url),
fn = function(x) {
web_image(url = x, height = 40)
})
#| echo: false
#| warning: false
player.goals.xg.v4 |>
slice(10) |>
gt()  |>
text_transform(
locations = cells_body(columns = Url),
fn = function(x) {
web_image(url = x, height = 40)
})
#| echo: false
#| warning: false
player.goals.xg.v4 |>
top_n(10) |>
gt()  |>
text_transform(
locations = cells_body(columns = Url),
fn = function(x) {
web_image(url = x, height = 40)
})
#| echo: false
#| warning: false
# epl_shot_location <- understat_league_season_shots(league = "EPL", season_start_year = 2024)
# write_csv(epl_shot_location,"07_epl_shot_location.csv")
epl_shot_location <- read.csv("07_epl_shot_location.csv")
epl_shot_location$ind_goal <- ifelse(epl_shot_location$result == "Goal", 1 , 0)
# Sumamos por jugador todos los xG que ha tenido.. tiros y la cantidad de goles realizados.
players.goals.xg <-
epl_shot_location |>
group_by(player,player_id) |>
summarise(Goals_Total = sum(ind_goal),
xG_Total = sum(xG),
Shoots_Total = n()) |>
arrange(desc(Goals_Total), xG_Total)
# Agregamos url imagen
players.goals.xg.v2 <- left_join(players.goals.xg, player.logo.url, by = c("player" = "Nombre_Jugador"))
# Otras estadisticas agregadas
player.goals.xg.v3 <- left_join(players.goals.xg.v2, players.premier.ustat, by = c("player_id"))
# Columnas finales seleccionadas
player.goals.xg.v4 <- player.goals.xg.v3 |>
select(Url, player, team_name,Goals_Total) |>
ungroup()
#| echo: false
#| warning: false
player.goals.xg.v4 |>
top_n(10) |>
gt()  |>
text_transform(
locations = cells_body(columns = Url),
fn = function(x) {
web_image(url = x, height = 40)
})
#| echo: false
#| warning: false
player.goals.xg.v4 |>
top_n(10) |>
gt()  |>
text_transform(
locations = cells_body(columns = Url),
fn = function(x) {
web_image(url = x, height = 40)
}) |>
# Nombre Columnas
cols_label(
Url ~ "",
player ~ "",
Goals_Total ~ "**Goles**",
.fn = md
)
#| echo: false
#| warning: false
player.goals.xg.v4 |>
top_n(10) |>
gt()  |>
text_transform(
locations = cells_body(columns = Url),
fn = function(x) {
web_image(url = x, height = 40)
}) |>
# Nombre Columnas
cols_label(
Url ~ "",
player ~ "Jugador",
Goals_Total ~ "**Goles**",
.fn = md
)
colnames(player.goals.xg.v3)
# Columnas finales seleccionadas
player.goals.xg.v4 <- player.goals.xg.v3 |>
select(Url, player,Goals_Total, assists , shots, Shoots_Total, time ) |>
ungroup()
player.goals.xg.v4
player.goals.xg.v4$Shoots_Total == player.goals.xg.v4$shots
player.goals.xg.v4$Shoots_Total != player.goals.xg.v4$shots
which(player.goals.xg.v4$Shoots_Total != player.goals.xg.v4$shots)
player.goals.xg.v4 |> filter(Shoots_Total != shots)
player.goals.xg.v4 |> filter(Shoots_Total != shots) |> View()
dim(players.goals.xg)
dim(players.goals.xg.v2)
dim(players.goals.xg.v3)
dim(player.goals.xg.v3)
players.goals.xg$player_id
length(unique(players.goals.xg$player_id))
unique(players.premier.ustat$player_id)
length(unique(players.premier.ustat$player_id))
player.goals.xg.v3
dim(player.goals.xg.v3)
length(unique(player.goals.xg.v3$player_id))
length(unique(player.goals.xg.v3$player))
length(unique(player.goals.xg.v3$Url))
length(unique(player.goals.xg.v3$ruta_local))
length(unique(player.goals.xg.v3$X))
# Otras estadisticas agregadas
player.goals.xg.v3 <- left_join(players.goals.xg.v2, players.premier.ustat, by = c("player_id"))
dim(player.goals.xg.v3)
dim(players.goals.xg.v2)
dim(players.goals.xg.v1)
dim(players.goals.xg)
length(players.goals.xg.v2$player_id)
length(players.premier.ustat)
length(players.premier.ustat$player_id)
length(unique(players.premier.ustat$player_id))
players.premier.ustat |> count(player_id)
players.premier.ustat |> count(player_id) |> filter(n>1)
players.premier.ustat |> count(player_id, player_name) |> filter(n>1)
players.premier.ustat |> filter(player_id == 843)
players.premier.ustat |>
group_by(season, player_id, player_name) |>
summarise(games = sum(games),
time = sum(time),
goals = sum(goals),
xG = sum(xG),
assists = sum(assists),
xA = sum(xA),
shots = sum(shots),
key_passes = sum(key_passes),
yellow_cards = sum(yellow_cards),
red_cards = sum(red_cards),
position = paste0(position, collapse = "-"),
team_name = paste0(team_name, collapse = "-"))
players.premier.ustat
length(players.premier.ustat$player_id)
length(unique(players.premier.ustat$player_id))
players.premier.ustat <- players.premier.ustat |>
group_by(season, player_id, player_name) |>
summarise(games = sum(games),
time = sum(time),
goals = sum(goals),
xG = sum(xG),
assists = sum(assists),
xA = sum(xA),
shots = sum(shots),
key_passes = sum(key_passes),
yellow_cards = sum(yellow_cards),
red_cards = sum(red_cards),
position = paste0(position, collapse = "-"),
team_name = paste0(team_name, collapse = "-"))
dim(players.premier.ustat)
#| warning: false
#| echo: false
# install.packages("worldfootballR")
library(knitr)
library(worldfootballR)
library(tidyverse)
library(gt)
library(gtExtras)
library(httr2)
library(jsonlite)
library(httr)
library(stringdist)
#| echo: false
#| warning: false
# url liga 2024-2025
url.df <- fb_league_urls(country = "ENG", gender = "M", season_end_year = "2025" , tier = "1st")
# url teams
teams.premier.df <- fb_teams_urls(url.df)
# obtener url por nombre equipo
name.team <- "Liverpool"
url.team <- teams.premier.df[grep(name.team,teams.premier.df)]
# url jugadores del equipo
url.players <- fb_player_urls(url.team)
# Estadisticas del equipo - cuadro resumen
stats.team <- fb_team_match_results(url.team)
# Estadisticas desglosadas
team.logs <- fb_team_match_log_stats(team_urls = url.team, stat_type = "passing")
year.param = 2024
team.names.ustat <- read.csv('/Users/samuelbeltranlastra/Documents/Proyecto R Git/SBstats/data/url_teams_understat.csv')
teams.premier.year <-  team.names.ustat |> filter(year == year.param) |> pull(url)
# Jugadores y estadisticas understat
players.premier.ustat <- understat_team_players_stats(teams.premier.year)
# Sumamos estadisticas para jugadores que estuvieron en mas de un equipo en la temporada
players.premier.ustat <- players.premier.ustat |>
group_by(season, player_id, player_name) |>
summarise(games = sum(games),
time = sum(time),
goals = sum(goals),
xG = sum(xG),
assists = sum(assists),
xA = sum(xA),
shots = sum(shots),
key_passes = sum(key_passes),
yellow_cards = sum(yellow_cards),
red_cards = sum(red_cards),
position = paste0(position, collapse = "-"),
team_name = paste0(team_name, collapse = "-"))
#| echo: false
#| warning: false
matched.logo.url <- read.csv("/Users/samuelbeltranlastra/Documents/Proyecto R Git/SBstats/dim_logos_png.csv")
logo.premier.league <- "https://raw.githubusercontent.com/Samuelb1992/football-logos/master/pl-main-logo.png"
#| echo: false
#| warning: false
player.logo.url <- read.csv('/Users/samuelbeltranlastra/Documents/Proyecto R Git/Python_Projects/scraperImageEPL/pngPlayers.csv')
#| echo: false
#| warning: false
premier.stats <- fb_season_team_stats(
season_end_year =  2025,
gender = "M",
country = "ENG",
tier = "1st",
stat_type = "league_table"
)
# Columnas a mostrar
premier.stats.table <- premier.stats %>%
select(
"Equipo" = Squad,
"Part_Jugados" = MP,
"Puntos" = Pts,
"Dif_Goles" = GD,
"Ranking" = Rk,
) %>%
arrange(Ranking)
premier.stats.table <-
premier.stats.table %>%
left_join(matched.logo.url, by  = c("Equipo"="Original_Name")) %>%
select(-name) %>%
rename(ruta_logo = download_url)
# Funcion Tabla
table.function.stats.res <- function(dataset) {
table.jpg <-
dataset %>%
select(Ranking,ruta_logo,Equipo,Part_Jugados,Dif_Goles,Puntos) %>%
# Filtrar por Ranking
# filter(if(page==1) Ranking <=10 else Ranking >10) %>%
gt(rowname_col = "Ranking") %>%
# Logo Equipo
text_transform(
locations = cells_body(columns = ruta_logo),
fn = function(x) {
web_image(url = x, height = 30)
}
) %>%
# Nombre Columnas
cols_label(
Ranking ~" ",
Equipo ~ "Equipo",
Part_Jugados ~ "PJ",
Dif_Goles ~ "DG",
Puntos ~ "**Puntos**",
ruta_logo ~ " ",
.fn = md
)  %>%
# Titulo Tabla
tab_header(
title = html(paste0(web_image(logo.premier.league),md(" Premier League 2024-2025")))
) %>%
tab_footnote(paste0("Fecha Actualización: ",Sys.Date())) %>%
# size
tab_options(
data_row.padding = "2px"
) %>%
# Fuente
tab_source_note(
source_note = "Fuente Datos: FBref"
) %>%
return(table.jpg)
}
# Tabla
# premier.stats.table %>%
#   select(Ranking,ruta_logo,Equipo,Part_Jugados,Dif_Goles,Puntos) %>%
#   gt(rowname_col = "Ranking") %>%
#   # Logo Equipo
#   text_transform(
#     locations = cells_body(columns = ruta_logo),
#     fn = function(x) {
#       web_image(url = x, height = 35)
#     }
#   ) %>%
#   # Nombre Columnas
#   cols_label(
#     Ranking ~" ",
#     Equipo ~ "Equipo",
#     Part_Jugados ~ "PJ",
#     Dif_Goles ~ "DG",
#     Puntos ~ "**Puntos**",
#     ruta_logo ~ " ",
#     .fn = md
#   )  %>%
#   # Titulo Tabla
#   tab_header(
#     title = html(paste0(web_image(logo.premier.league),md(" Premier League 2024-2025")))
#   ) %>%
#   tab_footnote(paste0("Fecha Actualización: ",Sys.Date()))
#| echo: false
#| warning: false
# listed_tables <- gt_double_table(premier.stats.table, table.function.stats.res, nrows = 20, noisy = TRUE)
# gt_two_column_layout(listed_tables)
total.table <- table.function.stats.res(premier.stats.table)
total.table
#| echo: false
#| warning: false
# url.teams.understat <- understat_team_meta(team_name = understat_available_teams(league = 'EPL'))
url.teams.understat <- read.csv("understat_teams_url.csv")
url.teams.understat.v2 <- url.teams.understat |> filter(season == "2024/2025")
player.goals.xg.v4 |> filter(shots != Shoots_Total)
#| echo: false
#| warning: false
# epl_shot_location <- understat_league_season_shots(league = "EPL", season_start_year = 2024)
# write_csv(epl_shot_location,"07_epl_shot_location.csv")
epl_shot_location <- read.csv("07_epl_shot_location.csv")
epl_shot_location$ind_goal <- ifelse(epl_shot_location$result == "Goal", 1 , 0)
# Sumamos por jugador todos los xG que ha tenido.. tiros y la cantidad de goles realizados.
players.goals.xg <-
epl_shot_location |>
group_by(player,player_id) |>
summarise(Goals_Total = sum(ind_goal),
xG_Total = sum(xG),
Shoots_Total = n()) |>
arrange(desc(Goals_Total), xG_Total)
# Agregamos url imagen
players.goals.xg.v2 <- left_join(players.goals.xg, player.logo.url, by = c("player" = "Nombre_Jugador"))
# Otras estadisticas agregadas
player.goals.xg.v3 <- left_join(players.goals.xg.v2, players.premier.ustat, by = c("player_id"))
# Metricas creadas
player.goals.xg.v4 <- player.goals.xg.v3 |>
mutate(
Goles_90 = Goals_Total / time,
Asistencias_90 = assists / time,
)
# Columnas finales seleccionadas
player.goals.xg.v4 <- player.goals.xg.v3 |>
select(Url, player,Goals_Total, assists , shots, Shoots_Total, time ) |>
ungroup()
player.goals.xg.v4 |> filter(shots != Shoots_Total)
player.goals.xg.v4 |> filter(shots != Shoots_Total) |> View()
#| echo: false
#| warning: false
# epl_shot_location <- understat_league_season_shots(league = "EPL", season_start_year = 2024)
# write_csv(epl_shot_location,"07_epl_shot_location.csv")
epl_shot_location <- read.csv("07_epl_shot_location.csv")
epl_shot_location$ind_goal <- ifelse(epl_shot_location$result == "Goal", 1 , 0)
# Sumamos por jugador todos los xG que ha tenido.. tiros y la cantidad de goles realizados.
players.goals.xg <-
epl_shot_location |>
group_by(player,player_id) |>
summarise(Goals_Total = sum(ind_goal),
xG_Total = sum(xG),
Shoots_Total = n()) |>
arrange(desc(Goals_Total), xG_Total)
# Agregamos url imagen
players.goals.xg.v2 <- left_join(players.goals.xg, player.logo.url, by = c("player" = "Nombre_Jugador"))
# Otras estadisticas agregadas
player.goals.xg.v3 <- left_join(players.goals.xg.v2, players.premier.ustat, by = c("player_id"))
# Metricas creadas
player.goals.xg.v4 <- player.goals.xg.v3 |>
mutate(
Goles_90 = Goals_Total / time,
Asistencias_90 = assists / time,
)
# Columnas finales seleccionadas
player.goals.xg.v4 <- player.goals.xg.v3 |>
select(Url, player,Goals_Total, assists , Shoots_Total, time ) |>
ungroup()
player.goals.xg.v4
colnames(epl_shot_location)
glimpse(epl_shot_location)
epl_shot_location |> count(result)
epl_shot_location |> filter(player == 	'Erling Haaland') |> count(result)
epl_shot_location |> filter(player == 	'Erling Haaland') |> count(result) |> pull(n) |> sum()
epl_shot_location |> filter(player == 	'Erling Haaland') |> count(result, lastAction) |> pull(n) |> sum()
epl_shot_location |> filter(player == 	'Erling Haaland') |> count(result, lastAction)
epl_shot_location |> filter(player == 	'Erling Haaland') |> count(result)
stats.team
players.premier.ustat
ederson_url <- "https://fbref.com/en/players/3bb7b8b4/Ederson"
ederson_summary <- fb_player_match_logs(ederson_url, season_end_year = 2021, stat_type = 'summary')
dplyr::glimpse(ederson_summary)
big5_player_possession <- fb_big5_advanced_season_stats(season_end_year= 2024, stat_type= "shooting", team_or_player= "player")
dplyr::glimpse(big5_player_possession)
unique(big5_player_possession$Comp)
big5_player_possession |>
filter(Comp == 'Premier League')
big5_player_possession <- fb_big5_advanced_season_stats(season_end_year= 2025, stat_type= "shooting", team_or_player= "player")
dplyr::glimpse(big5_player_possession)
big5_player_possession |>
filter(Comp == 'Premier League')
player.premier.fbref <- big5_player_possession |>
filter(Comp == 'Premier League')
dim(player.premier.fbref)
dim(players.premier.ustat)
player.premier.fbref |> count(Player)
player.premier.fbref |> count(Player) |> arrange(n)
player.premier.fbref <- big5_player_possession |>
filter(Comp == 'Premier League')
glimpse(player.premier.fbref)
