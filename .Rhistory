pacf(ts(arima2$residuals), lag.max=48,main="PACF Residuos",ylim=c(-1,1))
tsdiag(arima2,gof.lag=24)
layout(matrix(c(1,1,2,2),2,2, byrow=TRUE))
hist(arima2$residuals, br=12, main='Histograma Residuos' ,xlab= "Residuos")
qqnorm(arima2$residuals, main='QQNorm')
qqline(arima2$residuals)
cpgram(arima2$residuals,main="Periodograma acum. residuos")
#ARIMA (3,0,0)(2,1,0)12
arima8 = arima(log(ts_df2), order = c(3,0,0), seasonal = list(order=c(2,1,0), period= 12))
#ARIMA (3,0,0)(2,1,2)12
arima3 =arima(log(ts_df2), order = c(3,0,0), seasonal = list(order=c(2,1,2), period= 12))
#ARIMA (3,0,0)(1,1,0)12
arima4 =arima(log(ts_df2), order = c(3,0,0), seasonal = list(order=c(1,1,0), period= 12))
#ARIMA (2,0,0)(2,1,0)12
arima5 =arima(log(ts_df2), order = c(2,0,0), seasonal = list(order=c(2,1,0), period= 12))
#ARIMA (2,0,1)(2,1,0)12
arima6 =arima(log(ts_df2), order = c(2,0,1), seasonal = list(order=c(2,1,0), period= 12))
#ARIMA (1,0,2)(2,1,0)12
arima7 =arima(log(ts_df2), order = c(1,0,2), seasonal = list(order=c(2,1,0), period= 12))
rmse(ts_df2,exp(fitted(arima2)))
rmse(ts_df2,exp(fitted(arima8)))
rmse(ts_df2,exp(fitted(arima3)))
rmse(ts_df2,exp(fitted(arima4)))
rmse(ts_df2,exp(fitted(arima5)))
rmse(ts_df2,exp(fitted(arima6)))
rmse(ts_df2,exp(fitted(arima7)))
rmse_mm
rmse_ses
rmse_holt
rmse_holt_winters
#predicciones
rmse_log = rmse(log(ts_df2),fitted(arima2))
# deshaciendo logaritmo
rmse_real = rmse(ts_df2,exp(fitted(arima2)))
#Predicciones calculadas para un año
Predicciones = predict(arima2, n.ahead = 23)
# Revertir transformación logarítmica
pred_final = exp(Predicciones$pred)
# tabla
tabla_pred = data.frame("Mes"=c("Enero","Febrero","Marzo","Abril","Mayo","Junio","Julio","Agosto","Septiembre","Octubre","Noviembre","Diciembre"),"Predicción"= pred_final[1:12])
knitr::kable(tabla_pred)
plot(ts_df,main=" Enero 2001 a Noviembre 2021",ylab= "Viajeros")
lines(pred_final,col="steelblue",lwd=3,lty = 2)
lines(M2$mean,col="red",lwd=1.0)
legend("topleft", legend= c("Original", "Predic. ARIMA" ,"Predic. Holt Winters"),
lwd=c(1,1,1), col=c("black","steelblue", "red") ,lty = c(1,2,1), cex = 0.8)
# tabla comparativa
tabla_comparativa = data.frame("Mes"=format(seq(as.Date("2020/1/1"), by = "month", length.out = 23),"%Y-%m"),"Real"=ts_df[229:251],"Pred. Arima"= ts(pred_final),"Pred. HW"= ts(M2$mean ))
knitr::kable(tabla_comparativa)
deficit =abs(round((tabla_comparativa$Real-tabla_comparativa$Pred..Arima)/(tabla_comparativa$Pred..Arima),4)*100)
plot(deficit, main= "Déficit Porcentual estimado de Viajeros en España generado por el Covid",ylab= "% Déficit",xlab="",xaxt = "n",cex.main=0.8)
axis(1, at=1:23 ,labels = format(seq(as.Date("2020/1/1"), by = "month", length.out = 23),"%Y-%m"),las=2)
library(stringr)
knitr::opts_chunk$set(echo = FALSE)
base_dir <- "/Users/samuelbeltranlastra/Documents/Proyecto R Git/Portafolio" # i.e. where the jekyll blog is on the hard drive.
base_url <- "/" # keep as is
# If the document is currently being knit, do this; skip it in normal execution
if (!is.null(knitr::current_input())){
# Output path for figures
fig_path <- paste0("assets/images/", str_remove(knitr::current_input(), ".Rmd"), "/")
# Set base directories
knitr::opts_knit$set(base.dir = base_dir, base.url = base_url)
# Set figure directories
knitr::opts_chunk$set(fig.path = fig_path,
cache.path = '../cache/',
message=FALSE, warning=FALSE,
cache = FALSE)
}
library(readxl)
library(forecast)
library(tidyverse)
library(forecast)
library(vars)
library(Metrics)
library(lmtest)
#Lectura de los datos
df = read.csv("Turismo_España.csv",sep=";",quote="\"",)
getwd()
library(clickR)
library(lubridate)
library(tidyverse)
library(readxl)
library(stringr)
air.stgo <- read.csv("listings-3.csv",na.strings = c("N/A",""), header = TRUE)
View(air.stgo)
descriptive(air.stgo)
summary(air.stgo)
head(air.stgo)
#| warning: false
#| echo: false
library(clickR)
library(lubridate)
library(tidyverse)
library(readxl)
library(stringr)
library(knitr)
library(kableExtra)
#| echo: false
select.variables <-  c(
'name',
'host_since',
'latitude',
'longitude',
'property_type',
'bedrooms',
'beds',
'amenities',
'price',
'has_availability',
'number_of_reviews',
'first_review',
'last_review',
'review_scores_rating',
'calculated_host_listings_count',
'reviews_per_month')
unique(air.stgo$property_type)
head(air.stgo$amenities)
desc.variables <-  c(
'Nombre',
'Antiguedad del anfitrión',
'latitud del alojamiento',
'longitud del alojamiento',
'Tipo de propiedad. Habitación privada,Casa completa, Habitación compartida,etc',
'Número de habitaciones',
'Camas',
'Servicios adicionales como Wifi, Calefacción, Gym, etc.',
'Precio por noche',
'Disponibilidad inmediata',
'Número de reseñas recibidas',
'Fecha de la primera reseña recibida',
'Fecha de la última reseña recibida',
'Puntaje general calificación del alojamiento',
'Cantidad total de alojamientos que administra el anfitrión',
'Cantidad de reseñas por mes que recibe el alojamiento')
table.dic <- data.frame("Variable" = select.variables , "Descripción" = desc.variables)
table.dic
table.dic %>%
kbl() %>%
kable_styling()
---
title: "Airbnb Santiago"
#| warning: false
#| echo: false
library(clickR)
library(lubridate)
library(tidyverse)
library(readxl)
library(stringr)
library(knitr)
library(kableExtra)
#| echo: false
air.stgo <- read.csv("listings-3.csv",na.strings = c("N/A",""), header = TRUE)
#| echo: false
select.variables <-  c(
'name',
'bedrooms',
'beds',
'amenities',
'price',
'number_of_reviews',
'first_review',
'last_review',
'review_scores_rating',
'reviews_per_month')
desc.variables <-  c(
'Nombre',
'Número de habitaciones',
'Cantidad total de camas',
'Servicios adicionales como Wifi, Calefacción, Gym, etc.',
'Precio por noche',
'Número de reseñas recibidas',
'Fecha de la primera reseña recibida',
'Fecha de la última reseña recibida',
'Puntaje general del alojamiento',
'Cantidad de reseñas por mes que recibe el alojamiento')
table.dic <- data.frame("Variable" = select.variables , "Descripción" = desc.variables)
table.dic %>%
kbl() %>%
kable_styling(bootstrap_options = c("striped","hover","condensed"), full_width = F , font_size = 12)
dim(air.stgo)
#| echo: false
select.variables <-  c(
'name',
'bedrooms',
'beds',
'amenities',
'price',
'number_of_reviews',
'first_review',
'last_review',
'review_scores_rating',
'reviews_per_month')
desc.variables <-  c(
'Nombre',
'Número de habitaciones',
'Cantidad total de camas',
'Servicios adicionales como Wifi, Calefacción, Gym, etc.',
'Precio por noche',
'Número de reseñas recibidas',
'Fecha de la primera reseña recibida',
'Fecha de la última reseña recibida',
'Puntaje general del alojamiento',
'Cantidad de reseñas por mes que recibe el alojamiento')
table.dic <- data.frame("Variable" = select.variables , "Descripción" = desc.variables)
table.dic %>%
kbl() %>%
kable_styling(bootstrap_options = c("striped","hover","condensed"), full_width = F , font_size = 12)
str(air.stgo)
#| echo: false
str(air.stgo)
#| echo: false
class.df <- str(air.stgo)
class(class.df)
class.df
#| echo: false
class.df <- str(air.stgo)
class.df
class.df <- str(air.stgo)
class.df
sapply(air.stgo,class)
descriptive(air.stgo)
#| echo: false
sapply(air.stgo,class) %>% kbl()
#| echo: false
sapply(air.stgo,class) %>%
kbl() %>%
kable_styling(bootstrap_options = c("striped","hover","condensed"), full_width = F , font_size = 12)
#| echo: false
sapply(air.stgo,class) %>%
kbl(longtable = TRUE) %>%
kable_styling(bootstrap_options = c("striped","hover","condensed"), full_width = F , font_size = 12)
#| echo: false
t(sapply(air.stgo,class)) %>%
kbl(longtable = TRUE) %>%
kable_styling(bootstrap_options = c("striped","hover","condensed"), full_width = F , font_size = 12)
lapply(air.stgo,class))
lapply(air.stgo,class))
lapply(air.stgo,class)
#| echo: false
class.list <- lapply(air.stgo,class)
length(class.list)
75/3
75/4
?split
class.list
#| echo: false
class.sapply <- sapply(air.stgo,class)
class.sapply
dim(class.sapply)
class.sapply[3]
class.sapply[1:3]
split(class.sapply,4)
split(class.sapply,cut(class.sapply,4,labels = F))
split(class.sapply, 4)
split(class.sapply, rep(1,2))
split(class.sapply, rep(2))
split(class.sapply, c(1,2,3))
#| echo: false
class.sapply <- sapply(air.stgo,class)
kbl(split(class.sapply,1:4),
longtable = TRUE) %>%
kable_styling(bootstrap_options = c("striped","hover","condensed"), full_width = F , font_size = 12)
split(class.sapply,1:4)
split(class.sapply,1:3)
#| echo: false
class.sapply <- sapply(air.stgo,class)
kbl(split(class.sapply,1:3),
longtable = TRUE) %>%
kable_styling(bootstrap_options = c("striped","hover","condensed"), full_width = F , font_size = 12)
#| echo: false
class.sapply <- sapply(air.stgo,class)
kbl(split(class.sapply,1:3),
longtable = TRUE, col.names = NULL) %>%
kable_styling(bootstrap_options = c("striped","hover","condensed"), full_width = F , font_size = 12)
class.sapply
as.data.frame(class.sapply)
as.data.frame(class.sapply) %>% split(.class.sapply)
as.data.frame(class.sapply) %>% colnames()
as.data.frame(class.sapply) %>% split(.$class.sapply)
#| echo: false
class.sapply <- sapply(air.stgo,class)
list.class <- split(class.sapply,.$class.sapply)
#| echo: false
class.sapply <- sapply(air.stgo,class) %>% as.data.frame()
list.class <- split(class.sapply,.$class.sapply)
class.sapply
#| echo: false
class.sapply <- sapply(air.stgo,class) %>% as.data.frame() %>% rename(. = test)
#| echo: false
class.sapply <- sapply(air.stgo,class) %>% as.data.frame() %>% rename(type_class = .)
#| echo: false
class.sapply <- sapply(air.stgo,class) %>% as.data.frame() %>% rename(type_class = .)
#| echo: false
class.sapply <- sapply(air.stgo,class) %>% as.data.frame()
class.sapply
colnames(class.sapply)
#| echo: false
class.sapply <- do.call(rbind,lapply(air.stgo,class))
class.sapply
list.class <- split(class.sapply,1)
list.class
list.class <- split(class.sapply,2)
list.class
colnmaes(class.sapply)
colnames(class.sapply)
#| echo: false
class.sapply <- do.call(rbind.data.frame(),lapply(air.stgo,class))
#| echo: false
class.sapply <- do.call(rbind.data.frame,lapply(air.stgo,class))
class.sapply
#| echo: false
class.sapply <- do.call(rbind,lapply(air.stgo,class))
class.sapply
#| echo: false
class.sapply <- do.call(rbind,lapply(air.stgo,class)) %>% as.data.frame()
class.sapply
#| echo: false
class.sapply <- do.call(rbind,lapply(air.stgo,class)) %>% as.data.frame() %>% rename(type_class = V1)
list.class <- split(class.sapply,.$type_class)
list.class <- split(class.sapply,$.type_class)
list.class <- split(class.sapply,$type_class)
list.class <- split(class.sapply,. $type_class)
list.class <- split(class.sapply, .$type_class)
list.class <- split(class.sapply, .$type_class)
class.sapply
list.class <- split(class.sapply, type_class)
list.class <- split(class.sapply, .type_class)
list.class <- split(class.sapply, .$type_class)
class.sapply %>% split(.$type_class)
list.class <- class.sapply %>% split(.$type_class)
list.class
#| echo: false
kbl(list.class,
longtable = TRUE, col.names = NULL) %>%
kable_styling(bootstrap_options = c("striped","hover","condensed"), full_width = F , font_size = 12)
#| echo: false
kbl(list.class,col.names = NULL) %>%
kable_styling(bootstrap_options = c("striped","hover","condensed"), full_width = F , font_size = 12)
#| echo: false
list.class %>%
kbl(col.names = NULL) %>%
kable_styling(bootstrap_options = c("striped","hover","condensed"), full_width = F , font_size = 12)
#| echo: false
list.class %>%
kbl(col.names = NULL)
#| echo: false
list.class %>%
kbl(col.names = NULL) %>%
kable_styling(bootstrap_options = c("striped","hover","condensed"), full_width = F , font_size = 12)
#| echo: false
list.class %>%
kbl(col.names = NULL) %>%
kable_styling(bootstrap_options = c("striped","hover","condensed"), full_width = F , font_size = 12)%>%
scroll_box(width = "500px", height = "200px")
#| echo: false
list.class %>%
kbl(col.names = NULL) %>%
kable_styling(bootstrap_options = c("striped","hover","condensed"), full_width = F , font_size = 12)%>%
scroll_box(height = "300px")
#| echo: false
list.class %>%
kbl(col.names = NULL) %>%
kable_styling(bootstrap_options = c("striped","hover","condensed"), full_width = F , font_size = 12)%>%
scroll_box(height = "200px")
sapply(list.class,dim)
sapply(list.class,length)
list.class
sapply(list.class,dim)
sapply(list.class,dim)[1,]
#| echo: false
sapply(list.class,dim)[1,] kbl() %>%
#| echo: false
sapply(list.class,dim)[1,] %>%
kbl() %>%
kable_styling(bootstrap_options = c("striped","hover","condensed"), full_width = F , font_size = 12)
#| echo: false
t(sapply(list.class,dim)[1,]) %>%
kbl(col.names = NULL) %>%
kable_styling(bootstrap_options = c("striped","hover","condensed"), full_width = F , font_size = 12)
#| echo: false
t(sapply(list.class,dim)[1,]) %>%
kbl() %>%
kable_styling(bootstrap_options = c("striped","hover","condensed"), full_width = F , font_size = 12)
air.stgo$price
air.stgo$price
list.class
#| include: false
air.stgo$host_since
list.class
list.class$character
#| include: false
air.stgo$host_since <- ymd(air.stgo$host_since)
air.stgo$host_since[1]
air.stgo$host_response_time[1]
air.stgo$host_response_rate[1]
str_remove(air.stgo$host_response_rate[1],"%")
str_remove(air.stgo$host_response_rate[2],"%")
str_remove(air.stgo$host_response_rate[3],"%")
str_remove(air.stgo$host_response_rate[200],"%")
str_remove(air.stgo$host_response_rate[NA],"%")
is.na(air.stgo$host_response_rate)
sum(is.na(air.stgo$host_response_rate))
?str_remove
str_remove("100%%","%")
str_remove(NA,"%")
str_remove(NULL,"%")
# remove % string and numeric
air.stgo$host_response_rate <- str_remove(air.stgo$host_response_rate,"%") %>% as.numeric()
air.stgo$host_response_rate[1]
air.stgo$host_response_rate[2]
list.class$character
# remove % string and numeric
air.stgo$host_acceptance_rate <- str_remove(air.stgo$host_acceptance_rate,"%") %>% as.numeric()
air.stgo$host_is_superhost[2]
air.stgo$host_is_superhost[3]
unique(air.stgo$host_is_superhost)
ifelse(air.stgo$host_is_superhost == "t",1,0)[1]
ifelse(air.stgo$host_is_superhost == "t",1,0)[2]
ifelse(air.stgo$host_is_superhost == "t",1,0)[3]
# to numeric
air.stgo$host_is_superhost <- ifelse(air.stgo$host_is_superhost == "t",1,0)
list.class$character
air.stgo$host_has_profile_pic[1]
# to numeric
air.stgo$host_has_profile_pic <- ifelse(air.stgo$host_has_profile_pic == "t",1,0)
air.stgo$host_identity_verified[1]
# to numeric
air.stgo$host_identity_verified <- ifelse(air.stgo$host_identity_verified == "t",1,0)
air.stgo$bathrooms_text[1]
air.stgo$bathrooms[1]
unique(air.stgo$bathrooms_text)
as.numeric(gsub("([0-9]+).*$", "\\1", unique(air.stgo$bathrooms_text))
as.numeric(gsub("([0-9]+).*$", "\\1", unique(air.stgo$bathrooms_text)))
as.numeric(gsub("([0-9]+).*$", "\\1", unique(air.stgo$bathrooms_text)))
# to numeric
air.stgo$bathrooms_text <- as.numeric(gsub("([0-9]+).*$", "\\1", air.stgo$bathrooms_text))
list.class$character
is.na(price)
is.na(air.stgo$price)
sum(is.na(air.stgo$price))
head(air.stgo$price)
str_remove(head(air.stgo$price),"$")
str_remove(air.stgo$price[1],"$")
str_remove(head(air.stgo$price),"\$")
str_remove(head(air.stgo$price),"\\$")
str_remove(head(air.stgo$price),"\\$") %>% as.numeric()
gsub("[[:punct:]]", " ", head(air.stgo$price))
?gsub
gsub("\\$","",head(air.stgo$price))
gsub("\\$","",head(air.stgo$price)) %>% gsub(",","")
gsub("\\$","",head(air.stgo$price)) %>% gsub(",")
gsub(",","",gsub("\\$","",head(air.stgo$price)))
gsub(",","",gsub("\\$","",head(air.stgo$price))) %>% as.numeric()
# remove currency and format to numeric
air.stgo$price <- gsub(",","",gsub("\\$","",air.stgo$price)) %>% as.numeric()
air.stgo$price
list.class$character
air.stgo$first_review <- ymd(air.stgo$first_review)
air.stgo$last_review <- ymd(air.stgo$last_review)
air.stgo$instant_bookable
air.stgo$has_availability
# to numeric
air.stgo$has_availability <- ifelse(air.stgo$has_availability == "t",1,0)
# to numeric
air.stgo$instant_bookable <- ifelse(air.stgo$instant_bookable == "t",1,0)
list.class$character
air.stgo$host_identity_verified
str(air.stgo)
library(FactoMineR)
air.stgo
str(air.stgo)
list.class
list.class
class.sapply
lapply(air.stgo,class)
do.call(rbind,lapply(air.stgo,class))
do.call(rbind,lapply(air.stgo,class)) %>% as.data.frame()
do.call(rbind,lapply(air.stgo,class)) %>% as.data.frame() %>% filter(V1 != 'character')
do.call(rbind,lapply(air.stgo,class)) %>% as.data.frame() %>% filter(V1 %in% c("numeric","integer"))
# Seleccionar variables de tipo numerico
var.pca <- do.call(rbind,lapply(air.stgo,class)) %>% as.data.frame() %>% filter(V1 %in% c("numeric","integer"))
var.pca
var.pca[1,]
var.pca[1]
var.pca[1,]
var.pca[,1]
var.pca$V1
row.names(var.pca)
# Seleccionar variables de tipo numerico
var.pca <- do.call(rbind,lapply(air.stgo,class)) %>% as.data.frame() %>% filter(V1 %in% c("numeric","integer")) %>% rownames()
var.pca
class(var.pca)
var.pca[var.pca %in% c("id")]
var.pca[var.pca %in% c("id","scrape_id","host_id")]
var.pca[var.pca %in% c("id","scrape_id","host_id","latitude","longitude")]
var.pca[!var.pca %in% c("id","scrape_id","host_id","latitude","longitude")]
# Filtrado de variables que no se utilizaran ( ids , ubicacion)
var.pca <- var.pca[!var.pca %in% c("id","scrape_id","host_id","latitude","longitude")]
?PCA
pca.air <- PCA(air.stgo[,var.pca])
pca.air <- PCA(air.stgo[,var.pca] , graph = FALSE)
opls(air.stgo[,var.pca])
library(ropls)
opls(air.stgo[,var.pca])
pca.ropls <- opls(air.stgo[,var.pca])
pca.ropls
pca.ropls <- opls(air.stgo[,var.pca] , ncp = 10)
?opls
pca.ropls <- opls(air.stgo[,var.pca])
pca.ropls
summary(pca.air)
library(factoextra)
